[metadata]
name = blurdev
version = file: blurdev/version.txt
description = blurdev
long_description = file: README.md
long_description_content_type = text/markdown
url = https://gitlab.blur.com/pipeline/blurdev.git
author = Blur Studio
author_email = opensource@blur.com
license = Proprietary
# license_file = LICENSE
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Operating System :: OS Independent
    License :: Other/Proprietary License
    Private :: Do Not Upload
platform = any
project_urls =
    Source = https://github.com/blurstudio/python-example
    Tracker = https://github.com/blurstudio/python-example/issues

[options]
packages = find:
install_requires =
    # Please keep list alphabetical
    blur-cute>=0.25.0
    blur-pillar>=0.16.0
    blur-sentry-bootstrap>=1.1.0
    certifi>=2019.9.11
    click>=7.1.2
    configparser>=4.0.2
    Deprecated>=1.2.7
    future>=0.18.2
    Jinja2>=2.10.3
    MarkupSafe>=1.1.1
    Pygments>=2.4.2
    python-redmine>=2.1.1
    # Currently blur_python requires a custom PyQt5 install on linux that
    # includes QScintilla and PyQt5. Don't require this as a pip package.
    QScintilla>=2.11.4;python_version>="3.5" and platform_system=="Windows"
    signalslot>=0.1.2
    tabulate>=0.8.7
    urllib3>=1.25.7
    winshell>=0.6
python_requires = >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*
include_package_data = True
setup_requires =
    setuptools
    setuptools_scm[toml]>=4,<6
    wheel

[options.packages.find]
exclude = tests

[options.entry_points]
gui_scripts =
    blurdevw = blurdev.cli:main
    # Create executable items that work even if using virtualenv, or editable installs
    # TODO: Remove these entry_points and the corresponding runtimes scripts
    # once we migrate to the new blurdevw executable.
    treegrunt = blurdev.runtimes.treegrunt:main
    treegrunt-tool = blurdev.runtimes.run_tool:main
    blurdev-protocol = blurdev.runtimes.protocol:main
    blurdev-logger = blurdev.runtimes.logger:main
    blurIDE = blurdev.runtimes.ide_editor:main
console_scripts =
    blurdev = blurdev.cli:main
    # Launch the blurdev-logger in a console mode so we can debug why the
    # gui_scripts are not running if there is a pip dependency version issue.
    # TODO: Remove this entry_point and the corresponding runtimes script
    # once we migrate to the new blurdev executable.
    blurdev-console = blurdev.runtimes.logger:main
blurdev.toolbars =
    Favorites = blurdev.gui.toolbars.toolstoolbar:FavoritesToolbar
    User = blurdev.gui.toolbars.toolstoolbar:UserToolbar
blurdev.tools.paths =
    TREEGRUNT_ROOT = blurdev.tools:toolPaths
blurdev.protocol_handlers =
    Treegrunt = blurdev.protocols.treegrunt_handler:TreegruntHandler
    Blurdev = blurdev.protocols.blurdev_handler:BlurdevHandler
    WriteStdOutput = blurdev.protocols.write_std_output_handler:WriteStdOutputHandler

[options.extras_require]
dev =
    black
    covdefaults
    coverage
    flake8
    flake8-bugbear
    pep8-naming
    pytest
    tox

[options.package_data]
* = version.txt

[bdist_wheel]
universal = 1

[flake8]
select = B, C, E, F, N, W, B9
extend-ignore =
    E203,
    E501,
    E722,
    # These changes are not going to be refactored in blurdev at this time
    B902,
    N802,
    N803,
    N806,
    N815,
    N816
max-line-length = 80
exclude =
    *.egg-info
    *.pyc
    .cache
    .eggs
    .git
    .tox
    __pycache__
    build
    dist
    docs
    shared-venv
